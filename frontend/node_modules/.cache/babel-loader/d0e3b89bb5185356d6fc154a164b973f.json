{"ast":null,"code":"var _jsxFileName = \"/home/antonio/dsVendas-sds3/frontend/src/components/BarChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { round } from 'utils/format';\nimport { REACT_APP_BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${REACT_APP_BASE_URL}/sales/success-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(100 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"% de Sucesso\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels\n    },\n    series: chartData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BarChart, \"lx8zkO1aLKIdCi1/t1P+u/1ejoo=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/antonio/dsVendas-sds3/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","REACT_APP_BASE_URL","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;;AAeA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAc;AACpDO,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KAD4C;AAIpDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAC,EADT;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI;AAJ4C,GAAd,CAA1C;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,kBAAmB,0BAAhC,EACCU,IADD,CACOC,QAAD,IAAc;AAChB,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIf,KAAK,CAAG,MAAMe,CAAC,CAACG,KAAR,GAAgBH,CAAC,CAACI,OAArB,EAA+B,CAA/B,CAAnB,CAAjB;AAEAf,MAAAA,YAAY,CAAC;AAACC,QAAAA,MAAM,EAAE;AAClBC,UAAAA,UAAU,EAAEO;AADM,SAAT;AAEVN,QAAAA,MAAM,EAAE,CAAC;AACRC,UAAAA,IAAI,EAAE,cADE;AAERC,UAAAA,IAAI,EAAEQ;AAFE,SAAD;AAFE,OAAD,CAAZ;AAMH,KAZD;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMG,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AASA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAG,EAAE,GAAGH,OAAL;AAAcI,MAAAA,KAAK,EAAErB,SAAS,CAACE;AAA/B,KADZ;AAEE,IAAA,MAAM,EAAEF,SAAS,CAACI,MAFpB;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9CH;;GAAML,Q;;KAAAA,Q;AAgDJ,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSuccess } from 'types/sale';\nimport { round } from 'utils/format';\nimport { REACT_APP_BASE_URL } from 'utils/requests';\n\ntype SeriesData = {\n    name: string,\n    data: number[]\n\n}\n\ntype ChartData = {\n    labels: {\n        categories: string[],\n    }\n    series: SeriesData[]\n}\n\nconst BarChart = () => {\n\n    const [chartData, setChartData] = useState <ChartData> ({ \n        labels: { \n            categories: []\n        }, \n        series: [\n            {\n                name:\"\", \n                data: []\n            }\n        ]})\n\n    useEffect(() => {\n        axios.get(`${REACT_APP_BASE_URL}/sales/success-by-seller`)\n        .then((response) => {\n            const data = response.data as SaleSuccess[];\n            const myLabels = data.map(x => x.sellerName)\n            const mySeries = data.map(x => round( (100 * x.deals / x.visited), 1 ))\n\n            setChartData({labels: { \n                categories: myLabels\n            }, series: [{\n                name: \"% de Sucesso\",\n                data: mySeries\n            }]})\n        })\n    }, [])\n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            }\n        },\n    };\n    \n    \n    return (\n      <Chart \n        options={ { ...options, xaxis: chartData.labels } }\n        series={chartData.series}\n        type=\"bar\"\n        height=\"240\"\n     />\n    );\n  }\n  \n  export default BarChart;\n  "]},"metadata":{},"sourceType":"module"}